import cv2 as cv
import mediapipe as mp
import glob

# Mediapipe 손 인식 초기화
mp_hands = mp.solutions.hands
mp_drawing = mp.solutions.drawing_utils

hand_landmark = mp_hands.Hands(
    min_detection_confidence=0.8,
    min_tracking_confidence=0.8,
    max_num_hands=1
)

img_files = sorted(glob.glob('./images/*.jpg'))
current_slide = 0 

def on_trackbar(val):
    global current_slide
    current_slide = val
    update_slide()

def update_slide():
    global slide_image
    slide_image = cv.imread(img_files[current_slide])
    slide_image = cv.resize(slide_image, (800, 800))

cv.namedWindow("Lecture")
cv.createTrackbar("Slide", "Lecture", 0, len(img_files) - 1, on_trackbar)

def check_pinch_gesture(hand_landmarks):
    thumb_tip = hand_landmarks.landmark[4]
    index_tip = hand_landmarks.landmark[8]
    distance = ((thumb_tip.x - index_tip.x)**2 + (thumb_tip.y - index_tip.y)**2)**0.5
    return distance < 0.07  # 임계값 조정


cap = cv.VideoCapture(0)
update_slide()

while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        break
    frame = cv.flip(frame, 1)  # 화면 좌우 반전
    rgb = cv.cvtColor(frame, cv.COLOR_BGR2RGB)  # Mediapipe는 RGB 포맷 필요

    # Mediapipe로 손 감지
    op = hand_landmark.process(rgb)
    
    if op.multi_hand_landmarks:
        for hand_landmarks in op.multi_hand_landmarks:
            mp_drawing.draw_landmarks(frame, hand_landmarks, mp_hands.HAND_CONNECTIONS)

            # 핀치 제스처 감지 및 슬라이드 넘기기
            if check_pinch_gesture(hand_landmarks):  
                slide_value = cv.getTrackbarPos("Slide", "Lecture")
                slide_value = min(slide_value + 1, len(img_files) - 1)  # 슬라이드 인덱스 증가
                cv.setTrackbarPos("Slide", "Lecture", slide_value)
                update_slide()  # 슬라이드 업데이트

    # 슬라이드 이미지 표시
    cv.imshow("Lecture", slide_image)
    cv.imshow("Webcam", frame)  # 웹캠 출력
    
    key = cv.waitKey(1) & 0xFF
    if key == 27:  # ESC 키로 종료
        break

cap.release()
cv.destroyAllWindows()
